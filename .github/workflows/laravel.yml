name: Laravel

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: "8.1.12"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan migrate -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run seeder
        run: php artisan db:seed
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      # - name: Test with phpunit
      #   run: vendor/bin/phpunit --coverage-text
      #   env:
      #     DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      # - name: Copy .env
      #   run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      # - name: Install Dependencies
      #   run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      # - name: Update Dependencies
      #   run: composer update
      # - name: dumpautoload Dependencies
      #   run: composer dumpautoload
      # - name: Link storage creating simlink folder for files
      #   run: php artisan storage:link
      # - name: Generate key
      #   run: php artisan key:generate
      # - name: Directory Permissions
      #   run: chmod -R 777 storage bootstrap/cache
      # - name: Create Database
      #   run: |
      #     mkdir -p database
      #     touch database/database.sqlite
      # - name: Perform Database Migration
      #   env:
      #     DB_CONNECTION: sqlite
      #     DB_DATABASE: database/database.sqlite
      # run: php artisan migrate:fresh
      - name: Perform PhpUnit testing
        run: php artisan test
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      # - name: Execute tests (Unit and Feature tests) via PHPUnit | Initiate PhpUnit testing
      #   run: vendor/bin/phpunit
